{{- if and .Values.prometheus.jmx.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "cp-kafka-connect.fullname" . }}-jmx-configmap
  labels:
    app: {{ template "cp-kafka-connect.name" . }}
    chart: {{ template "cp-kafka-connect.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  jmx-kafka-connect-prometheus.yml: |+
    jmxUrl: service:jmx:rmi:///jndi/rmi://localhost:{{ .Values.jmx.port }}/jmxrmi
    lowercaseOutputName: true
    lowercaseOutputLabelNames: false
    ssl: false
    rules:
      # "kafka.schema.registry:type=app-info,id=*"
      - pattern: "kafka.connect<type=app-info, client-id=(.+)><>(.+): (.+)"
        name: "kafka_connect_app_info"
        value: 1
        labels:
          client-id: "$1"
          $2: "$3"
        type: UNTYPED
      # kafka.connect:type=connect-worker-rebalance-metrics
      - pattern: "kafka.connect<type=connect-worker-rebalance-metrics><>([^:]+)"
        name: "kafka_connect_connect_worker_rebalance_metrics_$1"
      # kafka.connect:type=connect-coordinator-metrics,client-id=*
      # kafka.connect:type=connect-metrics,client-id=*
      - pattern: "kafka.connect<type=(.+), client-id=(.+)><>([^:]+)"
        name: kafka_connect_$1_$3
        labels:
          client_id: $2
      # kafka.connect:type=connect-worker-metrics
      - pattern: "kafka.connect<type=connect-worker-metrics><>([^:]+)"
        name: kafka_connect_connect_worker_metrics_$1
        labels:
          connector: "aggregate"
      # kafka.connect:type=connect-worker-metrics,connector=*
      - pattern: "kafka.connect<type=connect-worker-metrics, connector=(.+)><>([^:]+)"
        name: kafka_connect_connect_worker_metrics_$2
        labels:
          connector: $1
      # kafka.connect:type=connector-metrics,connector=*
      - pattern: "kafka.connect<type=connector-metrics, connector=(.+)><>(.+): (.+)"
        value: 1
        name: kafka_connect_connector_metrics
        labels:
          connector: $1
          $2: $3
        type: UNTYPED

      # https://github.com/debezium/debezium-examples/blob/main/monitoring/debezium-jmx-exporter/config.yml
      - pattern : "kafka.connect<type=connect-worker-metrics>([^:]+):"
        name: "kafka_connect_worker_metrics_$1"
      - pattern : "kafka.connect<type=connect-metrics, client-id=([^:]+)><>([^:]+)"
        name: "kafka_connect_metrics_$2"
        labels:
          client: "$1"
      - pattern: "debezium.([^:]+)<type=connector-metrics, context=([^,]+), server=([^,]+), key=([^>]+)><>RowsScanned"
        name: "debezium_metrics_RowsScanned"
        labels:
          plugin: "$1"
          name: "$3"
          context: "$2"
          table: "$4"
      - pattern: "debezium.([^:]+)<type=connector-metrics, server=([^,]+), task=([^,]+), context=([^,]+), database=([^>]+)>([^:]+)"
        name: "debezium_metrics_$6"
        labels:
          plugin: "$1"
          name: "$2"
          task: "$3"
          context: "$4"
          database: "$5"
      - pattern: "debezium.([^:]+)<type=connector-metrics, server=([^,]+), task=([^,]+), context=([^>]+)>([^:]+)"
        name: "debezium_metrics_$5"
        labels:
          plugin: "$1"
          name: "$2"
          task: "$3"
          context: "$4"
      - pattern: "debezium.([^:]+)<type=connector-metrics, context=([^,]+), server=([^>]+)>([^:]+)"
        name: "debezium_metrics_$4"
        labels:
          plugin: "$1"
          name: "$3"
          context: "$2"
      # end https://github.com/debezium/debezium-examples/blob/main/monitoring/debezium-jmx-exporter/config.yml


      # mbean = com.mongodb.kafka.connect:connector=mongodb-source,task=source-task-0,type=source-task-metrics:
      - pattern: "com.mongodb.kafka.connect<type=(.+)-task-metrics, connector=(.+), task=(.+)><>(.+): (.+)"
        name: kafka_connect_mongodb_$1_task_metrics_$4
        labels:
          connector: "$2"
          task: "$3"
      # kafka.connect:type=*-task-metrics,*
      # kafka.connect:type=source-task-metrics,connector=*,task=*
      # kafka.connect:type=sink-task-metrics,connector=*,task=*
      # kafka.connect:type=connector-task-metrics,connector=*,task=*
      - pattern: "kafka.connect<type=(.+)-task-metrics, connector=(.+), task=(\\d+)><>(.+): (.+)"
        name: kafka_connect_$1_task_metrics_$4
        labels:
          connector: "$2"
          task: "$3"
      # kafka.connect:type=task-error-metrics,*
      # kafka.connect:type=task-error-metrics,connector=*,task=*
      - pattern: "kafka.connect<type=task-error-metrics, connector=(.+), task=(\\d+)><>([^:]+)"
        name: kafka_connect_task_error_metrics_$3
        labels:
          connector: "$1"
          task: "$2"
      # confluent.replicator:type=confluent-replicator-task-metrics,* : confluent-replicator-task-topic-partition-*: Number Values
      - pattern: "confluent.replicator<type=confluent-replicator-task-metrics, confluent-replicator-(.*)=(.+), confluent-replicator-(.+)=(.+), confluent-replicator-(.+)=(.+), confluent-replicator-(.+)=(.+)><>confluent-replicator-task-topic-partition-(.*): (.*)"
        name: confluent_replicator_task_metrics_$9
        labels:
          $1: "$2"
          $3: "$4"
          $5: "$6"
          $7: "$8"
      # confluent.replicator:type=confluent-replicator-task-metrics,* : Strings
      - pattern: "confluent.replicator<type=confluent-replicator-task-metrics, confluent-replicator-(.*)=(.+), confluent-replicator-(.+)=(.+), confluent-replicator-(.+)=(.+), confluent-replicator-(.+)=(.+)><>(confluent-replicator-destination-cluster|confluent-replicator-source-cluster|confluent-replicator-destination-topic-name): (.*)"
        name: confluent_replicator_task_metrics_info
        value: 1
        labels:
          $1: "$2"
          $3: "$4"
          $5: "$6"
          $7: "$8"
          $9: "$10"
      # "kafka.consumer:type=app-info,client-id=*"
      # "kafka.producer:type=app-info,client-id=*"
      - pattern: "kafka.(.+)<type=app-info, client-id=(.+)><>(.+): (.+)"
        value: 1
        name: kafka_$1_app_info
        labels:
          client_type: $1
          client_id: $2
          $3: $4
        type: UNTYPED
      # "kafka.consumer:type=consumer-metrics,client-id=*, protocol=*, cipher=*"
      # "kafka.consumer:type=type=consumer-fetch-manager-metrics,client-id=*, topic=*, partition=*"
      # "kafka.producer:type=producer-metrics,client-id=*, protocol=*, cipher=*"
      - pattern: "kafka.(.+)<type=(.+), (.+)=(.+), (.+)=(.+), (.+)=(.+)><>(.+):"
        name: kafka_$1_$2_$9
        type: GAUGE
        labels:
          client_type: $1
          $3: "$4"
          $5: "$6"
          $7: "$8"
      # "kafka.consumer:type=consumer-node-metrics,client-id=*, node-id=*"
      # "kafka.consumer:type=consumer-fetch-manager-metrics,client-id=*, topic=*"
      # "kafka.producer:type=producer-node-metrics,client-id=*, node-id=*"
      # "kafka.producer:type=producer-topic-metrics,client-id=*, topic=*"
      - pattern: "kafka.(.+)<type=(.+), (.+)=(.+), (.+)=(.+)><>(.+):"
        name: kafka_$1_$2_$7
        type: GAUGE
        labels:
          client_type: $1
          $3: "$4"
          $5: "$6"
      # "kafka.consumer:type=consumer-fetch-manager-metrics,client-id=*"
      # "kafka.consumer:type=consumer-metrics,client-id=*"
      # "kafka.producer:type=producer-metrics,client-id=*"
      - pattern: "kafka.(.+)<type=(.+), (.+)=(.+)><>(.+):"
        name: kafka_$1_$2_$5
        type: GAUGE
        labels:
          client_type: $1
          $3: "$4"
      - pattern: "kafka.(.+)<type=(.+)><>(.+):"
        name: kafka_$1_$2_$3
        labels:
          client_type: $1
{{- end }}
