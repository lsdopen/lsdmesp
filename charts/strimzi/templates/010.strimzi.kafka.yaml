{{- $kraftcontroller := .Values.lsdmesp.strimzi.kraftcontroller -}}
{{- $kafka := .Values.lsdmesp.strimzi.kafka -}}
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: controller
  labels:
    strimzi.io/cluster: {{ .Release.Name }}
spec:
  jvmOptions:
    -Xms: {{ $kraftcontroller.jvm.Xms }}
    -Xmx: {{ $kraftcontroller.jvm.Xmx }}
  replicas: {{ $kraftcontroller.replicas }}
  resources:
    {{- toYaml $kraftcontroller.resources | nindent 4 }}
  roles:
    - controller
  storage:
    type: jbod
    volumes:
      - id: 0
        class: {{ .Values.lsdmesp.storageClass }}
        deleteClaim: false
        kraftMetadata: shared
        size: {{ $kraftcontroller.dataVolumeCapacity }}
        type: persistent-claim
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: broker
  labels:
    strimzi.io/cluster: {{ .Release.Name }}
spec:
  jvmOptions:
    -Xms: {{ $kafka.jvm.Xms }}
    -Xmx: {{ $kafka.jvm.Xmx }}
  replicas: {{ $kafka.replicas }}
  resources:
    {{- toYaml $kafka.resources | nindent 4 }}
  roles:
    - broker
  storage:
    type: jbod
    volumes:
      - id: 0
        class: {{ .Values.lsdmesp.storageClass }}
        deleteClaim: false
        kraftMetadata: shared
        size: {{ $kafka.dataVolumeCapacity }}
        type: persistent-claim
  template:
    pod:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: accept-pod
                operator: In
                values:
                - lsdmesp-broker-0
            weight: 80
          - preference:
              matchExpressions:
              - key: accept-pod
                operator: In
                values:
                - lsdmesp-broker-1
            weight: 40
          - preference:
              matchExpressions:
              - key: accept-pod
                operator: In
                values:
                - lsdmesp-broker-2
            weight: 20
        podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: strimzi.io/pool-name
                  operator: In
                  values:
                  - broker
              topologyKey: kubernetes.io/hostname
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    strimzi.io/node-pools: enabled
    strimzi.io/kraft: enabled
spec:
  clientsCa:
    generateCertificateAuthority: true
    renewalDays: 30
    validityDays: 3650
  clusterCa:
    generateCertificateAuthority: true
    renewalDays: 30
    validityDays: 3650
  cruiseControl:
    config:
      sample.store.topic.replication.factor: 3
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: cruise-control-metrics
          key: metrics-config.yml
  entityOperator:
    topicOperator:
      resources:
        limits:
          cpu: "1"
          memory: 512Mi
        requests:
          cpu: 10m
          memory: 10Mi
    userOperator:
      resources:
        limits:
          cpu: "1"
          memory: 512Mi
        requests:
          cpu: 10m
          memory: 10Mi
  kafka:
    version: {{ .Values.lsdmesp.strimzi.version }}
    authorization:
      superUsers:
      - CN=lsdadmin
      {{- if eq .Values.lsdmesp.internalSecurity.authentication "mtls" }}
      - CN=lsdmesp
      {{- else }}
      - ANONYMOUS
      {{- end }}
      type: simple
    config:
      auto.create.topics.enable: "false"
      num.partitions: {{ .Values.lsdmesp.defaultNumPartitions }}
      default.replication.factor: {{ .Values.lsdmesp.defaultReplicationFactor }}
      min.insync.replicas: {{ .Values.lsdmesp.defaultMinInSyncReplicas }}
      offsets.topic.replication.factor: {{ .Values.lsdmesp.defaultReplicationFactor }}
      transaction.state.log.replication.factor: {{ .Values.lsdmesp.defaultReplicationFactor }}
      transaction.state.log.min.isr: {{ .Values.lsdmesp.defaultMinInSyncReplicas }}
      replica.socket.timeout.ms: 30000
      request.timeout.ms: 30000
      offsets.commit.timeout.ms: 5000
      log.cleanup.policy: delete
      log.retention.ms: 604800000
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
        {{- if eq .Values.lsdmesp.internalSecurity.authentication "mtls" }}
        authentication:
          type: tls
        {{- end }}
      - name: external
        port: 9094
        type: nodeport
        tls: true
        authentication:
          type: tls
        configuration:
          bootstrap:
            nodePort: 32100
          brokerCertChainAndKey:
            certificate: tls.crt
            key: tls.key
            secretName: lsdmesp-external-ca-cert
          brokers:
          - broker: 0
            advertisedHost: broker0.{{ $kafka.externalDomain }}
            nodePort: 32000
          - broker: 1
            advertisedHost: broker1.{{ $kafka.externalDomain }}
            nodePort: 32001
          - broker: 2
            advertisedHost: broker2.{{ $kafka.externalDomain }}
            nodePort: 32002
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yml
  kafkaExporter:
    topicRegex: ".*"
    groupRegex: ".*"