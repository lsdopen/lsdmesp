{{- if .Values.lsdmesp.ldap.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-ldifs
  namespace: {{ .Release.Namespace }}
stringData:
  00_cf_connect.ldif: |-
    dn: cn={{ .Values.lsdmesp.confluent.connect.username }},{{ `{{ LDAP_BASE_DN }}` }}
    userPassword: {{ .Values.lsdmesp.confluent.connect.password }}
    description: Confluent Connect user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: {{ .Values.lsdmesp.confluent.connect.username }}
  01_cf_controlcenter.ldif: |-
    dn: cn={{ .Values.lsdmesp.confluent.controlcenter.username }},{{ `{{ LDAP_BASE_DN }}` }}
    userPassword: {{ .Values.lsdmesp.confluent.controlcenter.password }}
    description: Confluent Control Center user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: {{ .Values.lsdmesp.confluent.controlcenter.username }}
  02_cf_kafka.ldif: |-
    dn: cn={{ .Values.lsdmesp.confluent.kafka.username }},{{ `{{ LDAP_BASE_DN }}` }}
    userPassword: {{ .Values.lsdmesp.confluent.kafka.password }}
    description: Confluent Kafka user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: {{ .Values.lsdmesp.confluent.kafka.username }}
  03_cf_restproxy.ldif: |-
    dn: cn={{ .Values.lsdmesp.confluent.kafkarestproxy.username }},{{ `{{ LDAP_BASE_DN }}` }}
    userPassword: {{ .Values.lsdmesp.confluent.kafkarestproxy.password }}
    description: Confluent REST Proxy user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: {{ .Values.lsdmesp.confluent.kafkarestproxy.username }}
  04_cf_ksqldb.ldif: |-
    dn: cn={{ .Values.lsdmesp.confluent.ksqldb.username }},{{ `{{ LDAP_BASE_DN }}` }}
    userPassword: {{ .Values.lsdmesp.confluent.ksqldb.password }}
    description: Confluent ksqlDB user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: {{ .Values.lsdmesp.confluent.ksqldb.username }}
  05_cf_schemaregistry.ldif: |-
    dn: cn={{ .Values.lsdmesp.confluent.schemaregistry.username }},{{ `{{ LDAP_BASE_DN }}` }}
    userPassword: {{ .Values.lsdmesp.confluent.schemaregistry.password }}
    description: Confluent Schema Registry user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: {{ .Values.lsdmesp.confluent.schemaregistry.username }}
  06_cf_groups.ldif: |-
    dn: ou=users,{{ `{{ LDAP_BASE_DN }}` }}
    objectClass: organizationalUnit
    ou: Users
    
    dn: ou=groups,{{ `{{ LDAP_BASE_DN }}` }}
    objectClass: organizationalUnit
    ou: Groups

    dn: cn=svcaccount,ou=groups,{{ `{{ LDAP_BASE_DN }}` }}
    cn: svcaccount
    objectClass: groupOfNames
    member: cn={{ .Values.lsdmesp.confluent.connect.username }},{{ `{{ LDAP_BASE_DN }}` }}
    member: cn={{ .Values.lsdmesp.confluent.controlcenter.username }},{{ `{{ LDAP_BASE_DN }}` }}
    member: cn={{ .Values.lsdmesp.confluent.kafka.username }},{{ `{{ LDAP_BASE_DN }}` }}
    member: cn={{ .Values.lsdmesp.confluent.kafkarestproxy.username }},{{ `{{ LDAP_BASE_DN }}` }}
    member: cn={{ .Values.lsdmesp.confluent.ksqldb.username }},{{ `{{ LDAP_BASE_DN }}` }}
    member: cn={{ .Values.lsdmesp.confluent.schemaregistry.username }},{{ `{{ LDAP_BASE_DN }}` }}
{{- if .Values.lsdmesp.security.enabledDemo }}
  07_cf_support.ldif: |-
    dn: cn=bob,ou=users,{{ `{{ LDAP_BASE_DN }}` }}
    userPassword: bob-secret
    description: Example user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: bob

    dn: cn=dave,ou=users,{{ `{{ LDAP_BASE_DN }}` }}
    userPassword: dave-secret
    description: Example user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: dave

    dn: cn=peter,ou=users,{{ `{{ LDAP_BASE_DN }}` }}
    userPassword: peter-secret
    description: Example user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: peter

    dn: cn=jane,ou=users,{{ `{{ LDAP_BASE_DN }}` }}
    userPassword: jane-secret
    description: Example user
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: jane

    dn: cn=TeamBlueRead,ou=groups,{{ `{{ LDAP_BASE_DN }}` }}
    cn: TeamBlueRead
    objectClass: groupOfNames
    member: cn=bob,ou=users,{{ `{{ LDAP_BASE_DN }}` }}
    member: cn=jane,ou=users,{{ `{{ LDAP_BASE_DN }}` }}

    dn: cn=TeamBlueWrite,ou=groups,{{ `{{ LDAP_BASE_DN }}` }}
    cn: TeamBlueWrite
    objectClass: groupOfNames
    member: cn=bob,ou=users,{{ `{{ LDAP_BASE_DN }}` }}
    member: cn=dave,ou=users,{{ `{{ LDAP_BASE_DN }}` }}

    dn: cn=TeamBlueAdmin,ou=groups,{{ `{{ LDAP_BASE_DN }}` }}
    cn: TeamBlueAdmin
    objectClass: groupOfNames
    member: cn=peter,ou=users,{{ `{{ LDAP_BASE_DN }}` }}
{{- end }}
---
{{- if .Values.lsdmesp.ldap.tls.enabled -}}
apiVersion: v1
stringData:
  tls.crt: "{{ .Values.lsdmesp.ldap.tls.fullchain }}"
  tls.key: "{{ .Values.lsdmesp.ldap.tls.privkey }}"
  ca.crt: "{{ .Values.lsdmesp.ldap.tls.cacerts }}"
kind: Secret
metadata:
  name: {{ .Release.name }}-sslcerts
  namespace: {{ .Release.Namespace }}
type: kubernetes.io/tls
{{- end }}
{{- end }}
