{{- $kafka := .Values.lsdmesp.confluent.kafka -}}
{{- if $kafka.enabled -}}
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
spec:
  authorization:
    type: rbac
    superUsers:
      - User:kafka
      - User:cf_kafka
      # - User:cf_schemaregistry
      # - User:cf_connect
      # - User:cf_ksqldb
      # - User:cf_kafkarestproxy
      # - User:cf_controlcenter
  configOverrides:
    jvm:
    - -Xms1g
    - -Xmx1g
    server:
    - auto.create.topics.enable=true
    - delete.topic.enable=true
    - num.partitions=6
    - min.insync.replicas=2
    - default.replication.factor=3
    - confluent.license.topic.replication.factor=3
    - confluent.license.topic.min.isr=2
    - offsets.topic.replication.factor=3
    - offsets.topic.min.isr=2
    - transaction.state.log.replication.factor=3
    - transaction.state.log.min.isr=2
    - confluent.cluster.link.metadata.topic.replication.factor=3
    - confluent.tier.metadata.replication.factor=3
    - confluent.balancer.topic.replication.factor=3
    - confluent.metadata.topic.replication.factor=3
    - confluent.metrics.reporter.topic.min.isr=2
    - confluent.security.event.logger.exporter.kafka.topic.replicas=3
    - log.retention.ms=86400000
  dataVolumeCapacity: 20Gi
  dependencies:
    kafkaRest:
      authentication:
        type: bearer
        bearer:
          secretRef: kafka-login
    kRaftController:
      clusterRef:
        name: kraftcontroller
      controllerListener:
        tls:
          enabled: true
        authentication:
          principalMappingRules:
          - RULE:.*CN[\s]?=[\s]?([a-zA-Z0-9.]*)?.*/$1/
          type: mtls
  image:
    application: confluentinc/cp-server:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  listeners:
    internal:
      authentication:
        principalMappingRules:
        - RULE:.*CN[\s]?=[\s]?([a-zA-Z0-9.]*)?.*/$1/
        type: mtls
      tls:
        enabled: true
    replication:
      authentication:
        principalMappingRules:
        - RULE:.*CN[\s]?=[\s]?([a-zA-Z0-9.]*)?.*/$1/
        type: mtls
      tls:
        enabled: true
    external:
      # externalAccess: {} // TODO: Needs to be added 
      authentication:
        type: ldap
      tls:
        enabled: true
  metricReporter:
    authentication:
      type: mtls
    enabled: true
    replicationFactor: 3
    tls:
      enabled: true
  oneReplicaPerNode: true
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsGroup: 1000
      runAsNonRoot: true
    resources:
      limits:
        cpu: 1
        memory: 8Gi
      requests:
        cpu: 50m
        memory: 3Gi
  replicas: 3
  services:
    mds:
      # Configure this with TLS encryption, but not with external access through a load balancer.
      # For external access to MDS, an ingress controller can be used.
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: mds-token
      provider:
        type: ldap
        ldap:
          address: ldap://ldap.lsdmesp-confluent.svc.cluster.local:389
          authentication:
            type: simple
            simple:
              secretRef: mds-login
          configurations:
            groupNameAttribute: cn
            groupObjectClass: group
            groupMemberAttribute: member
            groupMemberAttributePattern: CN=(.*),DC=test,DC=com
            groupSearchBase: dc=test,dc=com
            groupSearchScope: 1
            userNameAttribute: cn
            userMemberOfAttributePattern: CN=(.*),DC=test,DC=com
            userObjectClass: organizationalRole
            userSearchBase: dc=test,dc=com
            userSearchScope: 1
  storageClass:
    name: standard
  tls:
    autoGeneratedCerts: true
{{- end -}}
